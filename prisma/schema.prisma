datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // URL dari database Anda
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lembaga   LembagaKemahasiswaan? @relation("LembagaToAdmin") // Relasi ke Lembaga, tidak perlu fields/references di sini
  managedBy Admin? @relation("AdminManagedBySuperadmin", fields: [managedById], references: [id]) // Relasi ke Superadmin
  managedById Int?
  managedAdmins Admin[] @relation("AdminManagedBySuperadmin") // Superadmin mengelola banyak admin

  @@map("admins")
}

model LembagaKemahasiswaan {
  id            Int      @id @default(autoincrement())
  uniqueId      String   @unique
  title         String
  description   String?
  bookletLink   String?
  pageLink      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  admin         Admin?   @relation("LembagaToAdmin", fields: [adminId], references: [id]) // Relasi ke Admin
  adminId       Int?     @unique // Relasi satu-ke-satu, adminId harus unik

  @@map("lembaga_kemahasiswaan")
}

enum Role {
  ADMIN
  SUPERADMIN
}

model Prestasi {
  id              Int      @id @default(autoincrement())
  nama            String   @db.VarChar(100)
  npm             String   @db.VarChar(15)
  namaKejuaraan   String   @db.VarChar(100)
  prodi           String   @db.VarChar(50)
  tanggalKejuaraan DateTime
  peringkat       String   @db.VarChar(50)
  imageKejuaraan  String?  @db.VarChar(255)              // URL atau path gambar kejuaraan (opsional)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  @@map("prestasi")
}
